{"version":3,"file":"static/js/191.8a59d83f.chunk.js","mappings":"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","sources":["components/errorMessage/ErrorMessage.js","components/randomCharacterInfo/RandomCharacterInfo.js","components/charactersList/CharactersList.js","components/skeleton/Skeleton.js","components/form/Form.js","components/characterInfo/CharacterInfo.js","components/errorBoundary/ErrorBoundary.js","components/pages/MainPage.js","services/MarvelService.js","hooks/http.hook.js"],"sourcesContent":["import errorImg from './error.gif'\r\n\r\nimport './ErrorMessage.sass'\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    //<img className='error__message' src={process.env.PUBLIC_URL + '/error.gif'} alt=\"Error\" /> //if in folder public\r\n    <img className='error__message' src={errorImg} alt=\"Error\" />\r\n  )\r\n}\r\n\r\nexport default ErrorMessage;","import { useState, useEffect } from \"react\";\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nimport Decoration from \"../../img/subHeader/Decoration.png\";\r\n\r\nimport \"../../sass/style.sass\";\r\nimport \"./RandomCharacterInfo.sass\";\r\n\r\nconst RandomCharacterInfo = (props) => {\r\n  const [character, setCharacter] = useState({});\r\n\r\n  const { loading, error, getCharacter, clearError } = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    updateCharacter();\r\n    //timerId = setInterval(updateCharacter, 6000)\r\n    //return () => clearInterval(timerId)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const onCharacterLoaded = (character) => {\r\n    // setLoading(false)\r\n    // setError(false)\r\n    setCharacter(character);\r\n  };\r\n\r\n  //const onCharacterLoading = () => setLoading(true)\r\n  // const onError = () => {\r\n  //   setLoading(false)\r\n  //   setError(true)\r\n  // }\r\n\r\n  const updateCharacter = () => {\r\n    clearError();\r\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\r\n    getCharacter(id).then(onCharacterLoaded);\r\n  };\r\n\r\n  const errorMessage = error ? <ErrorMessage></ErrorMessage> : null;\r\n  const spinner = loading ? <Spinner></Spinner> : null;\r\n  const content = !(loading || error) ? <View character={character}></View> : null;\r\n\r\n  return (\r\n    <div className=\"sub__header mt__50\">\r\n      <div className=\"container flex__display random_character_media\">\r\n        {errorMessage}\r\n        {spinner}\r\n        {content}\r\n        <div className=\"random__character__block\">\r\n          <h2>\r\n            Random character for today! <br />\r\n            Do you want to get to know him better?\r\n          </h2>\r\n          <h3>Or choose another one</h3>\r\n          <button onClick={updateCharacter} className=\"btn\">\r\n            TRY IT\r\n          </button>\r\n          <img src={Decoration} alt=\"mjolnir\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst View = ({ character }) => {\r\n  const { name, description, thumbnail, homepage, wiki } = character;\r\n  return (\r\n    <div className=\"info__block flex__display\">\r\n      <div>\r\n        <img className=\"random__character__main__img\" src={thumbnail} alt=\"Random character\" />\r\n      </div>\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{description}</p>\r\n        <a href={homepage}>\r\n          <button className=\"btn\">HOMEPAGE</button>\r\n        </a>\r\n        <a href={wiki}>\r\n          <button className=\"btn grey__btn\">WIKI</button>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RandomCharacterInfo;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport Spinner from \"../spinner/Spinner\";\r\n\r\nimport \"../../sass/style.sass\";\r\nimport \"./charactersList.sass\";\r\n\r\nconst CharactersList = (props) => {\r\n  const [charactersList, setCharactersList] = useState([]);\r\n  const [newItemLoading, setNewItemLoading] = useState(false);\r\n  const [offset, setOffset] = useState(213);\r\n  const [charEnded, setCharEnded] = useState(false);\r\n\r\n  const { loading, error, getAllCharacters } = useMarvelService();\r\n\r\n  const onRequest = (offset, initial) => {\r\n    // отрисовывает extra characters on click etc.\r\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n    getAllCharacters(offset).then(onCharactersListLoaded);\r\n  };\r\n\r\n  useEffect(() => {\r\n    onRequest(offset, true);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []); // отрисовывает characters when create page\r\n\r\n  const onCharactersListLoaded = (newCharactersList) => {\r\n    let ended = false;\r\n    if (newCharactersList.length < 9) {\r\n      ended = true;\r\n    }\r\n\r\n    setCharactersList((charactersList) => [...charactersList, ...newCharactersList]);\r\n    setNewItemLoading((newItemLoading) => false);\r\n    setOffset((offset) => offset + 9);\r\n    setCharEnded((charEnded) => ended);\r\n  };\r\n\r\n  const itemRefs = useRef([]);\r\n  const focusOnItem = (id) => {\r\n    itemRefs.current.forEach((item) => item.classList.remove(\"card__active\"));\r\n    itemRefs.current[id].classList.add(\"card__active\");\r\n    itemRefs.current[id].focus();\r\n  };\r\n\r\n  // чтобы не помещать такую конструкцию в метод render/return\r\n  function renderItems(arr) {\r\n    const items = arr.map((item, i) => {\r\n      let imgStyle = { objectFit: \"cover\" };\r\n      if (\r\n        item.thumbnail === \"https://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\r\n      ) {\r\n        // eslint-disable-next-line\r\n        imgStyle = { objectFit: \"unset\" };\r\n      }\r\n      return (\r\n        <li\r\n          className={`characters__card`}\r\n          tabIndex={0}\r\n          key={item.id}\r\n          ref={(el) => (itemRefs.current[i] = el)}\r\n          onClick={() => {\r\n            props.onCharacterSelected(item.id);\r\n            focusOnItem(i);\r\n          }}\r\n          onKeyPress={(e) => {\r\n            if (e.key === \" \" || e.key === \"Enter\") {\r\n              props.onCharacterSelected(item.id);\r\n              focusOnItem(i);\r\n            }\r\n          }}\r\n        >\r\n          <img src={item.thumbnail} alt={item.name} />\r\n          <h2>{item.name}</h2>\r\n        </li>\r\n      );\r\n    });\r\n    return <ul className=\"flex__display__content contetnt__container mb__50\">{items}</ul>;\r\n  }\r\n\r\n  const items = renderItems(charactersList);\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  const spinner = loading && !newItemLoading ? <Spinner /> : null;\r\n\r\n  return (\r\n    <div className=\"characters\">\r\n      {errorMessage}\r\n      {spinner}\r\n      {items}\r\n      <button\r\n        disabled={newItemLoading}\r\n        onClick={() => onRequest(offset)}\r\n        style={{ display: charEnded ? \"none\" : \"block\" }}\r\n        className=\"btn btn__load__more\"\r\n      >\r\n        LOAD MORE\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nCharactersList.protoTypes = {\r\n  onCharacterSelected: PropTypes.number,\r\n};\r\n\r\nexport default CharactersList;\r\n","import { Component } from 'react';\r\n\r\nimport './Skeleton.sass'\r\nimport '../../sass/style.sass'\r\n\r\nclass Skeleton extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"character__search\">\r\n      <h2>Please select a character to see information</h2>\r\n      <div className=\"skeleton\">\r\n          <div className=\"pulse skeleton__header\">\r\n              <div className=\"pulse skeleton__circle\"></div>\r\n              <div className=\"pulse skeleton__mini\"></div>\r\n          </div>\r\n          <div className=\"pulse skeleton__block\"></div>\r\n          <div className=\"pulse skeleton__block\"></div>\r\n          <div className=\"pulse skeleton__block\"></div>\r\n      </div>    \r\n    </div> \r\n    )\r\n  }\r\n}\r\n\r\nexport default Skeleton;\r\n\r\n","import { useState } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage as FormikErrorMessage } from 'formik';\r\nimport { Link } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nimport '../../sass/style.sass'\r\nimport './form.sass'\r\n\r\nfunction CharacterSearchForm() {\r\n  const [charName, setCharName] = useState(null)\r\n  const {getCharacterPage, error, loading, clearError} = useMarvelService();\r\n\r\n  const getCharacter = (nameCharacter) => { // getting char from API then use function to put in charName\r\n    getCharacterPage(nameCharacter)\r\n      .then(onCharacterLoaded)   \r\n  }\r\n\r\n  const onCharacterLoaded = (charName) => { // if нету параметра (charName) то не работает!\r\n    clearError()\r\n    setCharName(charName)\r\n    console.log(charName);\r\n  }\r\n\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  const renderCharacter = !charName ? null : charName.length ? \r\n      <div> \r\n        <p className=\"character__form__answer\">There is! Visit {charName[0].name} page?</p>\r\n        <Link to={`/characters/${charName[0].id}`}>\r\n          <button  className=\"btn grey__btn grey__btn__search\" disabled={loading}>TO PAGE</button> \r\n        </Link>  \r\n      </div> : \r\n      <p className=\"character__form__bad__answer\">The character was not found. Check the name and try again</p>\r\n\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{name: ''}}\r\n        validationSchema={Yup.object({name: Yup.string().required('This field is required') })}\r\n        onSubmit= { values => getCharacter(values.name) } >\r\n        \r\n        <Form className=\"character__form\" action=\"#\">\r\n          <h2>Or find a character by name:</h2>\r\n          <div>\r\n            <Field id=\"name\" name='name' type=\"text\" placeholder=\"Enter name\" />\r\n            <button type=\"submit\" className=\"btn\">FIND</button>\r\n          </div>\r\n          {renderCharacter}\r\n          {errorMessage}\r\n          <FormikErrorMessage name='name' className=\"character__form__bad__answer\" component=\"p\" />\r\n        </Form>\r\n      </Formik>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CharacterSearchForm;","import { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport Skeleton from \"../skeleton/Skeleton\";\r\nimport Form from \"../form/Form\";\r\n\r\nimport \"../../sass/style.sass\";\r\nimport \"./characterInfo.sass\";\r\n\r\nconst CharacterInfo = ({ characterId, scrolled }) => {\r\n  const [character, setCharacter] = useState(null);\r\n\r\n  const { loading, error, getCharacter, clearError } = useMarvelService();\r\n\r\n  const onCharacterLoaded = (character) => {\r\n    setCharacter(character);\r\n  };\r\n\r\n  const updateCharacter = () => {\r\n    if (!characterId) return;\r\n\r\n    clearError();\r\n\r\n    getCharacter(characterId).then(onCharacterLoaded);\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateCharacter();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [characterId]);\r\n\r\n  const skeleton = character || loading || error ? null : <Skeleton />;\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  const spinner = loading ? <Spinner /> : null;\r\n  const content = !(loading || error || !character) ? <View character={character} /> : null;\r\n\r\n  return (\r\n    <div\r\n      style={{ marginTop: `${scrolled >= 450 ? scrolled - 450 + 20 : 0}px` }}\r\n      className=\"need_flex_style_if_use_itself\"\r\n    >\r\n      <div className=\"character__info__active\">\r\n        {skeleton}\r\n        {errorMessage}\r\n        {spinner}\r\n        {content}\r\n      </div>\r\n      <Form></Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst View = ({ character }) => {\r\n  const { name, description, thumbnail, homepage, wiki, comics } = character;\r\n\r\n  const show10Comics = comics.map((item, i) => {\r\n    // eslint-disable-next-line array-callback-return\r\n    if (i > 9) return; //limit 10 comics\r\n    return (\r\n      <li key={i}>\r\n        <Link to={`/comics/${item.resourceURI.substring(43)}`}>{item.name}</Link>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <img src={thumbnail} alt={name} />\r\n      <h2 className=\"character__info__active__h2\">{name}</h2>\r\n      <a href={homepage}>\r\n        <button className=\"btn first__character__btn\">HOMEPAGE</button>\r\n      </a>\r\n      <a href={wiki}>\r\n        <button className=\"btn grey__btn second__character__btn\">WIKI</button>\r\n      </a>\r\n      <p>{description}</p>\r\n      <h3>Comics:</h3>\r\n      <ul className=\"character__info__ul\">\r\n        {comics.length > 0 ? null : \"There is no comics for that character\"}\r\n        {show10Comics}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nCharacterInfo.propTypes = {\r\n  characterId: PropTypes.number,\r\n};\r\n\r\nexport default CharacterInfo;\r\n","import { Component } from \"react\";\r\n\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  state = {\r\n    error: false\r\n  }\r\n\r\n  // static getDerivedStateFromError(error) { // how setState but works with Error. componentDidCatch may be better \r\n  //   return {error: true};\r\n  // }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.log(error, errorInfo);\r\n    this.setState({error: true})\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return <ErrorMessage></ErrorMessage>\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;","import { useEffect, useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport RandomCharacterInfo from \"../randomCharacterInfo/RandomCharacterInfo\";\r\nimport CharactersList from \"../charactersList/CharactersList\";\r\nimport CharacterInfo from \"../characterInfo/CharacterInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\nimport \"../../sass/style.sass\";\r\nimport \"../app/app.sass\";\r\n\r\nimport bg_man from \"../../img/bg_asset.png\";\r\n\r\nconst MainPage = () => {\r\n  const [selectedCharacter, SetSelectedCharacter] = useState(null);\r\n\r\n  const onCharacterSelected = (id) => SetSelectedCharacter(id);\r\n\r\n  const [scroll, setScroll] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const checkCurScroll = () => {\r\n      const scrollPosition = window.scrollY;\r\n      if (scrollPosition >= 410) {\r\n        setScroll(scrollPosition);\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", checkCurScroll, { passive: true });\r\n\r\n    return () => window.removeEventListener(\"scroll\", checkCurScroll);\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta name=\"description\" content=\"Web site created using create-react-app\" />\r\n        <title>React app Marvell</title>\r\n      </Helmet>\r\n      <ErrorBoundary>\r\n        <RandomCharacterInfo />\r\n      </ErrorBoundary>\r\n      <div className=\"container mt__20 flex__display character_overlay_media\">\r\n        <ErrorBoundary>\r\n          <CharactersList onCharacterSelected={onCharacterSelected} />\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <CharacterInfo scrolled={scroll} characterId={selectedCharacter} />\r\n        </ErrorBoundary>\r\n      </div>\r\n      <img className=\"bg__man\" src={bg_man} alt={bg_man} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n  const { loading, request, error, clearError } = useHttp();\r\n\r\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n  const _apiKey = \"apikey=b728d6eca38d279d414e4429c17a0bc1\";\r\n  //const _apiKey = 'apikey=c5d6fc8b83116d92ed468ce36bac6c62'; //another if above limits hits\r\n  const _baseOffset = 211;\r\n\r\n  const getAllComics = async (offset = 5) => {\r\n    const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\r\n    return res.data.results.map(_transformComic);\r\n  };\r\n  const getComic = async (id) => {\r\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n    return _transformComic(res.data.results[0]);\r\n  };\r\n  const _transformComic = (comic) => {\r\n    return {\r\n      id: comic.id,\r\n      title: comic.title,\r\n      description: comic.description || \"There is no description\",\r\n      thumbnail: comic.thumbnail.path + \".\" + comic.thumbnail.extension,\r\n      price: comic.prices[0].price ? `${comic.prices[0].price}$` : \"NOT AVAILABLE\",\r\n      language: comic.textObjects.language || \"en-us\",\r\n      pages: comic.pageCount\r\n        ? `${comic.pageCount} pages`\r\n        : \"No information about the number of pages\",\r\n    };\r\n  };\r\n\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformCharacter(res.data.results[0]);\r\n  };\r\n  const getCharacterPage = async (nameCharacter) => {\r\n    const res = await request(`${_apiBase}characters?name=${nameCharacter}&${_apiKey}`);\r\n    return res.data.results.map(_transformCharacter); // if res.data.results[0] не будет работать коректно\r\n  };\r\n  const _transformCharacter = (character) => {\r\n    return {\r\n      id: character.id,\r\n      name: character.name,\r\n      description: character.description\r\n        ? `${character.description.slice(0, 210)}...`\r\n        : `There is no description for this character`,\r\n      thumbnail: character.thumbnail.path + \".\" + character.thumbnail.extension,\r\n      homepage: character.urls[0].url,\r\n      wiki: character.urls[1].url,\r\n      comics: character.comics.items,\r\n    };\r\n  };\r\n\r\n  return {\r\n    loading,\r\n    error,\r\n    getAllCharacters,\r\n    getCharacter,\r\n    clearError,\r\n    getAllComics,\r\n    getComic,\r\n    getCharacterPage,\r\n  };\r\n};\r\n\r\nexport default useMarvelService;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n    \r\n    setLoading(true)\r\n\r\n    try {\r\n      const response = await fetch(url, {method, body, headers});\r\n      if (!response.ok) {\r\n        throw new Error(`Could not fetch ${url}, status: ${response.status}`)\r\n      }\r\n      const data = await response.json();\r\n      setLoading(false)\r\n\r\n      return data;\r\n    } catch(e) {\r\n      setLoading(false)\r\n      setError(e.message)\r\n      throw e;\r\n    }\r\n  }, []);\r\n\r\n  const clearError = useCallback(() => setError(null), []);\r\n\r\n  return {loading, error, request, clearError, setLoading }\r\n}"],"names":["className","src","errorImg","alt","View","character","name","description","thumbnail","homepage","wiki","href","props","useState","setCharacter","useMarvelService","loading","error","getCharacter","clearError","useEffect","updateCharacter","onCharacterLoaded","id","Math","floor","random","then","errorMessage","ErrorMessage","spinner","Spinner","content","onClick","Decoration","CharactersList","charactersList","setCharactersList","newItemLoading","setNewItemLoading","offset","setOffset","charEnded","setCharEnded","getAllCharacters","onRequest","initial","onCharactersListLoaded","newCharactersList","ended","length","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","items","arr","map","i","objectFit","tabIndex","ref","el","onCharacterSelected","onKeyPress","e","key","renderItems","disabled","style","display","protoTypes","PropTypes","Skeleton","Component","charName","setCharName","getCharacterPage","console","log","renderCharacter","to","initialValues","validationSchema","Yup","required","onSubmit","values","nameCharacter","action","type","placeholder","component","comics","show10Comics","resourceURI","substring","characterId","scrolled","skeleton","marginTop","Form","ErrorBoundary","state","errorInfo","this","setState","children","selectedCharacter","SetSelectedCharacter","scroll","setScroll","checkCurScroll","scrollPosition","window","scrollY","addEventListener","passive","removeEventListener","Helmet","bg_man","setLoading","setError","request","useCallback","url","method","body","headers","fetch","response","ok","Error","status","json","data","message","useHttp","_apiBase","_apiKey","getAllComics","res","results","_transformComic","getComic","comic","title","path","extension","price","prices","language","textObjects","pages","pageCount","_transformCharacter","slice","urls"],"sourceRoot":""}